{
  "openapi": "3.0.1",
  "info": {
    "title": "Apartment API",
    "version": "v1"
  },
  "paths": {
    "/api/Apartment": {
      "get": {
        "tags": [
          "Apartment"
        ],
        "summary": "Preglde apartmana uz filtriranje i paginaciju - autorizovani i  neautorizovani korisnici.",
        "description": " Ukoliko se neki od parametara ostavi prazan, taj parametar se nece uzimati u obzir pri filtriranju. Ukoliko je u pitanju paginacija\r\n    onda ce se prikazati svi apartmani zajedno. Apartmani se ne vracaju sa svi svojim podacima (bez komentara, slikama...), vec samo sa najosnovnijim podacima.\r\n    \r\ntitle => \"Sofia\",\r\nminPrice => 0,\r\nmaxPrice => 10000,\r\nCategoryId => 0,\r\npageNumber=> 100,\r\npageSize => 10",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MinPrice",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxPrice",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "Apartment"
        ],
        "summary": "Dodavanje apartmana - autorizovani korisnici sa odredjenim(IdUseCase => 5) privilegijama.",
        "description": "    Thumb slika, kao i ostale slike se salju u formi base64. Ukoliko se Prioritet ne definise podrazumevana vrednost ce biti 3;\r\n    Prioritet na kazuje da li ce se apartman videti na vrhu ili dnu stranice. \r\n            \r\n\r\n{\r\n    \"title\":\"Peti najbolji Apartman (inserted)\",\r\n    \"description\": \"desc\",\r\n      \"geoLocationX\": \"string\",\r\n     \"geoLocationY\": \"string\",\r\n     \"categoryId\": 1,\r\n     \"cityId\": 1,\r\n     \"file\": \"uneti sliku u base64 formatu\",\r\n     \"fileId\": 0,\r\n     \"price\": {\r\n       \"pricePerNight\": 500,\r\n       \"pricePerNightWeekend\": 900,\r\n       \"priceOnHoliday\":1000\r\n     },\r\n     \"imagesIds\": [\r\n            \r\n      ],\r\n     \"images\": [\r\n       \"string\"\r\n     ],\r\n     \"priority\": 1\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApartmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApartmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApartmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "patch": {
        "tags": [
          "Apartment"
        ],
        "summary": "Azuriranje apartmana - autorizovani korisnici sa odredjenim(IdUseCase => 23) privilegijama.",
        "description": "         Prilikom azuriranja podataka, prosledjuju se svi podaci objekta koji se azurira. Tacnje ukoliko se azurira samo naziv, potrebno je u request-u posalti i sve ostale informacije. Funkcionalnost je zamisljena tako sto bi korisnik na front dobio sve podatke o nekom apartmanu i njih izmenio ukoliko to zeli i vratio nazad na server. Azuriraju se samo oa polja koja su promenjena,ne i ceo objekat.   \r\n         Ukoliko se ne proslede svi Id-evi slika ili ukoliko se prosledi samo nekolicina Id-eva slika, smatrace se da su slike ciji Id-evi nisu prosledjeni izbrisanim.\r\n         \r\n{\r\n    \"id\":13,\r\n    \"title\":\"Treci najbolji Apartman (edit)\",\r\n    \"description\": \"desc\",\r\n      \"geoLocationX\": \"string\",\r\n     \"geoLocationY\": \"string\",\r\n     \"categoryId\": 1,\r\n     \"cityId\": 1,\r\n     \"file\": \"uneti sliku u base64 formatu\",\r\n     \"fileId\": 45,\r\n     \"price\": {\r\n       \"pricePerNight\": 8000,\r\n       \"pricePerNightWeekend\": 9000,\r\n       \"priceOnHoliday\":10000\r\n     },\r\n     \"imagesIds\": [\r\n            \r\n      ],\r\n     \"images\": [\r\n       \"string\"\r\n     ],\r\n     \"priority\": 5\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Apartment/{id}": {
      "get": {
        "tags": [
          "Apartment"
        ],
        "summary": "Pregled pojedinacnog apartmana - autorizovani i  neautorizovani korisnici.",
        "description": "Dohvatanje pojedinacnog apartmana sa svim njegovim detaljima, komentarima, slikama, ocenama itd. \r\nProsledite Id => 1 kako biste sigurno dohvatili jedan apartman",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "delete": {
        "tags": [
          "Apartment"
        ],
        "summary": "Brisanje apartmana - autorizovani korisnici sa odredjenim (IdUseCase => 25) privilegijama.",
        "description": "   Aminstrator moze obrisati bilo koji apartman u aplikaciji, ali se primenjuje tzv. \"soft delete\" tako da podaci ostaju fizicnki u bazi podataka.\r\n   \r\nProsledite Id => 14 Kako biste bili sigurni da se jedan apartman obrisali.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/City": {
      "get": {
        "tags": [
          "City"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "City"
        ],
        "summary": "Dodavanje grad - autorizovani korisnici sa odredjenim (IdUseCase => 7) privilegijama.",
        "description": "   Administratori mogu dodavati gradove.\r\n   \r\n{\r\n    \"name\":\"Kragujevac\"\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Comment": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Dodavanje komentara na apartman - autorizovani korisnici sa odredjenim (IdUseCase => 50) privilegijama.",
        "description": "         Svaki autorizovani korisnik moze komentarisati bilo koji apartman. Takodje moze odgovarati drugi korisnicima na komenatre.\r\n         \r\n{\r\n \"apartmentId\":1,\r\n \"parrentId\":0,\r\n \"text\": \"Komentar 111\"\r\n }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Comment/DeleteYourSelf/{id}": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Korisnikcko brisanje sopstvenog apartmana - autorizovani korisnici sa odredjenim(IdUseCase => 54) privilegijama.",
        "description": "Korisnik moze obrisati svoji komentar. Ukoliko je njegov komentar imao decu komentare onda se i oni automatski brisu sa njim.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Comment/{id}": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Administratorsko risanje bilo kog apartmana - autorizovani korisnici sa odredjenim(IdUseCase => 29) privilegijama.",
        "description": "Administrator moze obrisati bilo koji komentar, ukoliko izbrisani komentar sadrzi decu komentare, onda ce i deca biti obrisana. Koristis se soft delete.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Rate": {
      "put": {
        "tags": [
          "Rate"
        ],
        "summary": "Dodavanje ocene na apartman - autorizovani korisnici sa odredjenim(IdUseCase => 51) privilegijama.",
        "description": "  Svaki autorizovani korisnik moze ostaviti samo jednom ocenu na jedan apartman u rasponu od 1 do 5.\r\n  Ulogovati se kao (markodasic70@gmail.com, VisokaIct1) \r\n{\r\n    \"apartmentId\":1,\r\n    \"value\":5\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Report": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Preglde svih reporta apartmna - autorizovani korisnici sa odredjenim (IdUseCase => 8) privilegijama.",
        "description": "Administratori mogu dohvatiti sve reoprtove koje su korisnici slali za odredjene apartmane.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Dodavanje jedne od stavki reporta (koje korisnik bira prilikom reporta apartmana) - autorizovani korisnici sa odredjenim (IdUseCase => 24) privilegijama.",
        "description": "Aministratori kreiraju nove ponudjene stavke koje ce korisnici moci odabrati prilikom reportovanja.\r\n\r\n{\r\n    \"name\":\"Ugrozavanje zivotinja\"\r\n{",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportLineDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportLineDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportLineDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "Report"
        ],
        "summary": "Reportovanje apartmana od strane korisnika  - autorizovani korisnici sa odredjenim(IdUseCase => 16) privilegijama.",
        "description": "Prilikom slanja reporta klijent salje Id reportLine i opcioni tekst i Id apartmana, svi ovi podaci se upisuju u veznu tabelu \"Report\"\r\nUlogovati se kao (markodasic70@gmail.com, VisokaIct1);\r\n{\r\n    \"text\":\"Narusavanje autorskih prave i propagiranje nasilja!\",\r\n    \"apartmentId\": 1,\r\n    \"reportLineId\" : 1\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/lines": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Preglde svih ponudjenih stavki reporta (pre slanja reporta korisnik mora odabrati jednu od ponudjenih stavki) - neautorizovani i autorizovani korisnici.",
        "description": "Korisnici mogu videti sve ponudjene stavke prilikom slanja reporta na apartman. Postoji poseban red u tabeli ReportLines koji sluzi za slobodan unos teksta ukoliko je report specificne prirode.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Reservation": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "summary": "Preglde svih rezervacija apartmna Uz omoguceno filtriranje i paginaciju - autorizovani korisnici sa odredjenim (IdUseCase => 26) privilegijama.",
        "description": " Moguce je filtrirati pretragu rezervacija po datumu, Id apartmana, da li je placeno. Takodje s unosom broja zeljenih stranica za brikaz kao i velicine tih stranica relaizuje paginacija\r\n \r\nCreatedAtFrom predstavlja datum od kada rezervacija pocinje,  CreatedAtTo predstavlja do kada je apartman rezervisan. \r\n\r\nCreatedAtFrom => \"2000-05-11T21:13:31.594Z\"\r\nCreatedAtTo => \"2030-05-11T21:13:31.594Z\"\r\nisPaid = false",
        "parameters": [
          {
            "name": "CreatedAtFrom",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedAtTo",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ApartmentId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsPaid",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "Reservation"
        ],
        "summary": "Dodavanje rezervacije apartmana - autorizovani korisnici sa odredjenim(IdUseCase => 17) privilegijama.",
        "description": "    Korinsik kreira rezervaciju unosenjem Id apartmana, datumo od, do. Ukoliko je apartman zauzet nekim danima koje spadaju u opseg u kom je korisnik zeleo da ga rezervise, bice obavesten porukom da je termin zauzet.\r\n    \r\n\r\n{\r\n    \"apartmentId\":1,\r\n    \"from\":\"2025-05-11T21:13:31.594Z\",\r\n    \"to\":\"2025-06-11T21:13:31.594Z\"\r\n\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Reservation/{id}": {
      "delete": {
        "tags": [
          "Reservation"
        ],
        "summary": "Brisanje Rezervacija od strane admina - autorizovani korisnici sa odredjenim (IdUseCase => 28) privilegijama.",
        "description": "Aministrator moze brisati sve rezervacije (soft delete).\r\nproslediti id => 16 kako biste sigurno obrisali jednu rezervacju",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Specification": {
      "get": {
        "tags": [
          "Specification"
        ],
        "summary": "Pregled svih specifikacija apartmana - autorizovani i  neautorizovani korisnici.",
        "description": "Svaki korisnik moze dohvatiti sve postojece specifikacije.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "post": {
        "tags": [
          "Specification"
        ],
        "summary": "Dodavanje jedne secifikacije i njene vrednosti jednom apartmanu - autorizovani korisnici sa odredjenim (IdUseCase => 52) privilegijama.",
        "description": "   Klijent prosledjuje Id aprtmana, Id specifikacije kao i vrenost te specifikacije u vidu teksta koji rucno dodaje. Svi podaci se upisuju u veznu tabelu.\r\n\r\n{\r\n    \"apartmentId\":1,\r\n    \"specificationId\":1,\r\n    \"value\":3\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApartmentSpecificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApartmentSpecificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApartmentSpecificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "Specification"
        ],
        "summary": "Dodavanje pojedinacne vrste specifikacije (u posebnu tabelu koja sadrzi sve specifikacije koje se kasnije spajaju veznom tabelom sa apartmanima) - autorizovani korisnici sa odredjenim(IdUseCase => 22) privilegijama.",
        "description": "    Dodavanje nove vrste specijikacije. Klijent prosledjue samo naziv specifikacije. Ta specifikacije ce kasnije biti dostupna za pridruzivanje apartmanima.\r\n    \r\n{\r\n    \"name\":\"Wi Fi\"\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SpecificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Pregled svi korisnika u aplikaciji uz mogucnost filtriranja i paginacije - autorizovani korisnici sa odredjenim(IdUseCase => 4) privilegijama.",
        "description": "Administrator moze dohvatiti sve korisnike, kao i filtrirati korisnike po: imenu i prezimenu, po datumu kreiranja u formi od-do. Tkoadje je omogucena paginacija poljima pageNumber (broji stranica koji treba da se prikaze) i pageSize (broji korisnika koji treba prikazati po strnaici)\r\n\r\nMozete uneti sledece podatke kako biste zasigurno dobili rezultat\r\n[\r\n FullName => \"Marko\"\r\n CreatedAtFrom => 2022-06-11T21:04:32.331Z\r\n CreatedAtTo => 2024-06-11T21:04:32.331Z\r\n PageNumber => 100\r\n PageSize => 10\r\n]",
        "parameters": [
          {
            "name": "FullName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedAtFrom",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedAtTo",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Log In korisnika na platformu pmocu JWT tokena - neautorizovani korisnici.",
        "description": "Korisnik se loguje na aplikaciju putem emaila i passworda. njegovi podaci se beleze u token koji se vraca klijentu u vidu teksta. Tokeni se skladiste u lokalnu memoriju aplikacije tako da je potrebno ulogovati se svaki put nakon gasenje aplikacije, jer se svi token brisu iz memorije nekon gasenje aplikacije.\r\n\r\n{\r\n    \"email\":\"markodasic70@gmail.com\",\r\n    \"password\":\"VisokaIct1\"\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogInUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Registracija korisnika na platformu - neautorizovani korisnici.",
        "description": " Korisnik se moze registrovati. Nakon uspesne registracije korisniku ce biti poslat mejl dobrodoslice. Unique ogranicenja  su sledeca: broji telefona i email adresa ne smeju biti isti. Ova logika je resena u vlaidatorima, cak i ukoliko je neki korisnik obrisan (zbog soft delete se njegovi podaci idalje fizicki cuvaju u bazi ) moguce je kreirati novog korisnika sa istom email adresom ili borjem telefona, ali samo ukoliko je korisnik koji vec poseduje istu emai adresu ili br. telefona obrisan.\r\n \r\n {\r\n     \"firstName\":\"Dasic\",\r\n     \"lastName\":\"Marko\"\r\n     \"email\":\"markodasic70@gmail.com\",\r\n     \"password\":\"VisokaIct1\",\r\n     \"phone\":\"+381652254864\",\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Azuriranje korisnika od strane administratora.- autorizovani korisnici sa odredjenim(IdUseCase => 9) privilegijama.",
        "description": " Administratori mogu azurirati bilo kog korisnika sistema. Prilikom azuriranja potrebno je da se proslede svi postojeci podaci korisnika. Ukoliko je neki od podataka promenjen to ce se detektovati i azurirace se samo ta svojstva objekta koji se azurira.\r\n \r\n{\r\n    \"id\": 1,\r\n    \"firstName\":\"Dasic\",\r\n    \"lastName\":\"Marko\"\r\n    \"email\":\"markodasic70@gmail.com\",\r\n    \"password\":\"VisokaIct1\",\r\n    \"phone\":\"+381652254864\",\r\n    \"cityId\":1,\r\n    \"useCaseIds\":[]\r\n}",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User/GetYourSelf": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Korisnicki pregled sopstvenog profila - svaki autorizovani korisnici.",
        "description": "Korisnik moze sam dohvatiti svoje podatke. Id korisnika se izvlazi iz JWT tokena.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Pregled pojedinacnog korisnika u aplikaciji - autorizovani korisnici sa odredjenim(IdUseCase => 3) privilegijama.",
        "description": "Administratori mogu dohvatiti sve detaljne informacije o korisniku prosledjivanjem Id korz url {user/id};\r\n\r\n{\r\n    \"id\":1\r\n}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Brisanje korisnika od strane administratora - autorizovani korisnici sa odredjenim(IdUseCase => 27) privilegijama.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User/RefreshToken": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/UpdateYourSelf": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Korisnicko azuriranje sopstvenog naloga.- autorizovani korisnici sa odredjenim(IdUseCase => 55) privilegijama.",
        "description": "Korisnici  mogu azurirati svoji nalog na sistemu. Prilikom azuriranja potrebno je da se proslede svi postojeci podaci korisnika. Ukoliko je neki od podataka promenjen to ce se detektovati i azurirace se samo ta svojstva objekta koji se azurira.\r\n Ovim izvrsavanjem se nece azurirati niz useCaseIds, jer ukoliko je prosledjen prazan niz, nece se vrsiti azurianje.\r\n {\r\n     ,\r\n     \"firstName\":\"Dasic\",\r\n     \"lastName\":\"Marko\"\r\n     \"email\":\"markodasic70@gmail.com\",\r\n     \"password\":\"VisokaIct1\",\r\n     \"phone\":\"+381652254864\",\r\n     \"cityId\":1,\r\n     \"useCaseIds\":[]\r\n }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User/DeleteYourSelf/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Korisnicko Brisanje sopstvenog naloga i automatski log out - autorizovani korisnici sa odredjenim(IdUseCase => 53) privilegijama.",
        "description": "Korisnik moze izbrisati sam svoji nalog. Nakon brisnaja njegov token ce automatski biti unisten. Koristi se Sof Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User/logout": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Log out - svaki autorizovani korisnik.",
        "description": "Token se unistava.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          },
          "404": {
            "description": "Not Found Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/UserUseCase": {
      "put": {
        "tags": [
          "UserUseCase"
        ],
        "summary": "Dodavanje odredjenih privilegija (IdUseCase) korisnika od strane administratora na platformu - autorizovani korisnici sa odredjenim(IdUseCase => 1) privilegijama.",
        "description": "{\r\n \"userId\":1,\r\n \"useCaseIds\":[101]\r\n }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUseCaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUseCaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUseCaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Inserted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddUseCaseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "useCaseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApartmentSpecificationDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "specification": {
            "type": "string",
            "nullable": true
          },
          "specificationId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApartmentDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "geoLocationX": {
            "type": "string",
            "nullable": true
          },
          "geoLocationY": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "string",
            "nullable": true
          },
          "fileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/PriceDto"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "surface": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parrentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "parrentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRateDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateReportDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "reportLineId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateReportLineDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReservationDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogInUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "pricePerNightWeekend": {
            "type": "number",
            "format": "double"
          },
          "priceOnHoliday": {
            "type": "number",
            "format": "double"
          },
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PriceUpdateDto": {
        "type": "object",
        "properties": {
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "pricePerNightWeekend": {
            "type": "number",
            "format": "double"
          },
          "priceOnHoliday": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SpecificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateApartmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "geoLocationX": {
            "type": "string",
            "nullable": true
          },
          "geoLocationY": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "string",
            "nullable": true
          },
          "fileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/PriceUpdateDto"
          },
          "imagesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "surface": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useCaseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}